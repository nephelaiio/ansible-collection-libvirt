---
- name: Gather localhost facts
  hosts: localhost
  gather_facts: true

- name: Set collection defaults
  hosts: "{{ libvirt_guests | default('all') }}:localhost"
  gather_facts: false
  tasks:
    - name: Verify platform vardef
      ansible.builtin.assert:
        that:
          - libvirt_platforms is defined
          - libvirt_platforms | length > 0

    - name: Set guest defaults
      ansible.builtin.set_fact:
        # Overridable values
        _libvirt_network: "{{ _network_name }}"
        _libvirt_bridge: "{{ _network_name }}br0"
        _libvirt_address: "{{ _network_addr }}"
        _libvirt_daemon_user: "{{ lookup('ansible.builtin.env', 'USER', default='libvirt-qemu') }}"
        _libvirt_daemon_group: "{{ lookup('ansible.builtin.env', 'USER', default='libvirt-qemu') }}"
        _libvirt_pass: "{{ libvirt_pass | default('molecule') }}"
        _libvirt_pool: "{{ _pool_name }}"
        _libvirt_path: "{{ libvirt_path | default(_path_pool) }}"
        _libvirt_guest_user: "{{ libvirt_user | default('molecule') }}"
        _libvirt_guest_dir: "{{ _path_pool }}"
        _libvirt_logdir: "{{ _path_log }}"
        _libvirt_conn_timeout: "{{ libvirt_conn_timeout | default('90') }}"
        _libvirt_resolvers: "{{ [libvirt_resolvers | default(['1.1.1.1', '8.8.8.8'])] | flatten }}"
        _libvirt_privkey: "{{ _path_pool }}/id_rsa"
        _libvirt_inventory_path: "{{ _path_pool }}/inventory"
      vars:
        _project_temp: "{{ lookup('ansible.builtin.env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}"
        _project_path: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}"
        _project_name: "{{ _project_path | basename | replace('_', '-') | replace('.', '-') }}"
        _network_name: "{{ libvirt_network | default('molecule') | trim }}"
        _pool_name: "{{ libvirt_pool | default('libvirt') }}"
        _network_addr: "{{ libvirt_address | default('172.31.252.1/24') }}"
        _path_pool: "{{ _project_path }}/libvirt/{{ _project_name }}"
        _path_log: "{{ lookup('ansible.builtin.env', 'MOLECULE_LOGDIR', default=_path_pool + '/logs') }}"

    - name: Set host defaults
      ansible.builtin.set_fact:
        # Derived values
        _libvirt_prefix: "{{ _libvirt_address | ansible.utils.ipaddr('prefix') }}"
        _libvirt_platform_data: "{{ _platform_indices }}"
        _libvirt_cleanup: "{{ libvirt_cleanup | default(True) }}"
        _libvirt_mac_prefix: "52:54:00"
      vars:
        _iface_host: "{{ _libvirt_address | ansible.utils.ipaddr('address') }}"
        _iface_network: "{{ _libvirt_address | ansible.utils.ipaddr('network') }}"
        _iface_prefix: "{{ _libvirt_address | ansible.utils.ipaddr('prefix') }}"
        _iface_netaddr: "{{ _iface_network }}/{{ _iface_prefix }}"
        _network_range: "{{ _iface_netaddr | ansible.utils.usable_range }}"
        _network_free: "{{ _network_range.usable_ips | difference([_iface_network, _iface_host]) }}"
        _network_usable: "{{ _network_free | community.general.version_sort }}"
        _ipaddr_data: "{{ _network_usable[0 : libvirt_platforms | length] | map('nephelaiio.plugins.map_format', _tpl_ipaddr) }}"
        _ipaddr_list: "{{ _ipaddr_data | map('ansible.builtin.from_json') }}"
        _tpl_index: '{ "index": "%s" }'
        _tpl_ipaddr: '{ "ipaddr": "%s" }'
        _index_data: "{{ range(libvirt_platforms | length) | map('nephelaiio.plugins.map_format', _tpl_index) }}"
        _index_list: "{{ _index_data | map('ansible.builtin.from_json') }}"
        _platform_ipaddrs: "{{ libvirt_platforms | zip(_ipaddr_list) | map('ansible.builtin.combine') }}"
        _platform_indices: "{{ _platform_ipaddrs | zip(_index_list) | map('ansible.builtin.combine') }}"
