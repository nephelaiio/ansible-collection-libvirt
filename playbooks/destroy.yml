---
- name: Prepare guest nodes
  ansible.builtin.import_playbook: nephelaiio.libvirt.facts


- name: Destroy KVM guests
  hosts: "{{ _libvirt_hosts }}"
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Verify required parameters
      ansible.builtin.assert:
        that: _libvirt_platforms is defined

    - name: Debug vardefs
      ansible.builtin.debug:
        msg: "{{ _varnames | zip(_varvalues) | map('join', '=') | reject('match', '^_libvirt_network_.*$') }}"
      vars:
        _varnames: "{{ lookup('ansible.builtin.varnames', '^_libvirt_.*$', wantlist=True)  }}"
        _varvalues: "{{ lookup('ansible.builtin.vars', *_varnames) }}"

    - name: Query active KVM guests
      ansible.builtin.command: "virsh list --name"
      register: guest_query
      changed_when: false

    - name: Set KVM guest facts
      ansible.builtin.set_fact:
        _guests: "{{ _libvirt_platforms | map(attribute='name') | intersect(guest_query.stdout_lines) }}"

    - name: Stop KVM guests
      ansible.builtin.command: "virsh destroy {{ item }}"
      loop: "{{ _guests }}"

    - name: Undefine KVM guests
      ansible.builtin.command: "virsh undefine {{ item }}"
      loop: "{{ _guests }}"

    - name: Delete guest disks
      ansible.builtin.file:
        dest: "{{ item }}"
        state: absent
      vars:
        _basenames: "{{ _libvirt_platforms | map(attribute='name') | product(['img', 'iso']) | map('join', '.') }}"
      loop: "{{ [_libvirt_path] | product(_basenames) | map('join', '/') }}"


- name: Destroy guests
  hosts: "{{ _libvirt_hosts }}"
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Verify required parameters
      ansible.builtin.assert:
        that:
          - _libvirt_network is defined
          - _libvirt_address is defined

    - name: Query active KVM networks
      ansible.builtin.command: "virsh net-list --name"
      register: net_query
      changed_when: false

    - name: Destroy libvirt network
      ansible.builtin.command: "virsh net-destroy {{ _libvirt_network }}"
      when:
        - _libvirt_network != "default"
        - _libvirt_network in net_query.stdout_lines

    - name: Destroy libvirt network bridge
      community.general.nmcli:
        type: bridge
        conn_name: "{{ _libvirt_network }}br0"
        state: absent

    - name: Delete host file entries
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: ".*{{ item }}.*"
        state: absent
      loop: "{{ _libvirt_platforms | map(attribute='name') }}"

    - name: Delete libvirt pool
      when: _libvirt_purge
      block:
        - name: Delete cached images
          ansible.builtin.file:
            dest: "{{ item }}"
            state: absent
          vars:
            _platform_image_urls: "{{ _libvirt_platforms | map(attribute='image') | unique }}"
            _platform_image_basenames: "{{ _platform_image_urls | map('urlsplit', 'path') | map('basename') }}"
            _platform_image_paths: "{{ [_libvirt_path] | zip(_platform_image_basenames) | map('join', '/') }}"
          loop: "{{ _platform_image_paths }}"

        - name: Destroy libvirt pool
          community.libvirt.virt_pool:
            state: deleted
            name: "{{ _libvirt_pool }}"
