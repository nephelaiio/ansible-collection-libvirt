---
- name: Prepare guest nodes
  ansible.builtin.import_playbook: nephelaiio.libvirt.prepare

- name: Set host facts
  ansible.builtin.import_playbook: nephelaiio.libvirt.facts

- name: Destroy KVM guests
  hosts: "{{ libvirt_hosts | default('localhost') }}"
  become: true
  tasks:
    - name: Debug vardefs
      ansible.builtin.debug:
        msg: "{{ _varnames | zip(_varvalues) | map('join', '=') | reject('match', '^_libvirt_network_.*$') }}"
      vars:
        _varnames: "{{ lookup('ansible.builtin.varnames', '^_libvirt_.*$', wantlist=True) }}"
        _varvalues: "{{ lookup('ansible.builtin.vars', *_varnames) }}"

    - name: Query active KVM guests
      ansible.builtin.command: "virsh list --name --state-running"
      register: _libvirt_guest_query_active
      changed_when: false

    - name: Set KVM guest facts for active guests
      ansible.builtin.set_fact:
        _libvirt_guest_list_active: "{{ _libvirt_platforms | map(attribute='name') | intersect(_libvirt_guest_names) }}"
      vars:
        _libvirt_guest_names: "{{ _libvirt_guest_query_active.stdout_lines | map('trim') | list }}"

    - name: Stop KVM guests
      ansible.builtin.command: "virsh destroy {{ item }}"
      loop: "{{ _libvirt_guest_list_active }}"

    - name: Query all KVM guests
      ansible.builtin.command: "virsh list --all --name"
      register: _libvirt_guest_query_all
      changed_when: false

    - name: Set KVM guest facts for all guests
      ansible.builtin.set_fact:
        _libvirt_guest_list_all: "{{ _libvirt_platforms | map(attribute='name') | intersect(_libvirt_guest_names_all) }}"
      vars:
        _libvirt_guest_names_all: "{{ _libvirt_guest_query_all.stdout_lines | map('trim') | list }}"

    - name: Undefine KVM guests
      ansible.builtin.command: "virsh undefine {{ item }}"
      loop: "{{ _libvirt_guest_list_all }}"

    - name: Set disk location facts
      ansible.builtin.set_fact:
        _libvirt_image_paths: "{{ [_libvirt_path] | product(_basenames) | map('join', '/') }}"
      vars:
        _basenames: "{{ _libvirt_platforms | map(attribute='name') | product(['img', 'iso']) | map('join', '.') }}"

    - name: Debug disk location facts
      ansible.builtin.debug:
        var: _libvirt_image_paths

    - name: Delete guest disks
      ansible.builtin.file:
        dest: "{{ item }}"
        state: absent
      loop: "{{ _libvirt_image_paths }}"

- name: Destroy KVM resources
  hosts: "{{ libvirt_hosts | default('localhost') }}"
  become: true
  tasks:
    - name: Destroy KVM resources
      when: _libvirt_cleanup | bool
      block:
        - name: Verify required parameters
          ansible.builtin.assert:
            that:
              - _libvirt_network is defined
              - _libvirt_address is defined

        - name: Query active KVM networks
          ansible.builtin.command: "virsh net-list --name"
          register: _libvirt_net_query
          changed_when: false

        - name: Destroy libvirt active network
          ansible.builtin.command: "virsh net-destroy {{ _libvirt_network }}"
          vars:
            _libvirt_net_list: "{{ _libvirt_net_query.stdout_lines | map('trim') | list | difference(['default']) }}"
          when: _libvirt_network in _libvirt_net_list

        - name: Query inactive KVM networks
          ansible.builtin.command: "virsh net-list --name --all"
          register: _libvirt_net_query
          changed_when: false

        - name: Destroy libvirt active network
          ansible.builtin.command: "virsh net-undefine {{ _libvirt_network }}"
          vars:
            _libvirt_net_list: "{{ _libvirt_net_query.stdout_lines | map('trim') | list | difference(['default']) }}"
          when: _libvirt_network in _libvirt_net_list

        - name: List network interfaces
          ansible.builtin.command: "nmcli -n --terse --fields DEVICE dev status"
          register: _libvirt_dev_info
          changed_when: false

        - name: Destroy libvirt network bridge
          community.general.nmcli:
            type: bridge
            conn_name: "{{ _libvirt_device }}"
            state: absent
          vars:
            _libvirt_device: "{{ _libvirt_network }}br0"
          when: _libvirt_device in _libvirt_dev_info.stdout

        - name: Delete host file entries
          ansible.builtin.lineinfile:
            path: /etc/hosts
            regexp: ".*{{ item }}.*"
            state: absent
          loop: "{{ _libvirt_platforms | map(attribute='name') }}"

        - name: Delete libvirt pool
          when: _libvirt_purge | bool
          block:
            - name: Delete cached images
              ansible.builtin.file:
                dest: "{{ item }}"
                state: absent
              vars:
                _platform_images: "{{ _libvirt_platforms | selectattr('image', 'defined') }}"
                _platform_image_urls: "{{ _platform_images | map(attribute='image') | ansible.builtin.unique }}"
                _platform_image_basenames: "{{ _platform_image_urls | map('urlsplit', 'path') | map('basename') }}"
                _platform_image_paths: "{{ [_libvirt_path] | zip(_platform_image_basenames) | map('join', '/') }}"
              loop: "{{ _platform_image_paths }}"

            - name: Query libvirt pools
              ansible.builtin.command: "virsh pool-list --name"
              register: pool_query

            - name: Set pool facts
              ansible.builtin.set_fact:
                _libvirt_pool_list: "{{ _pools.stdout_lines | map('trim') | list }}"

            - name: Destroy libvirt pool
              ansible.builtin.command: "virsh pool-destroy {{ _libvirt_pool }}"
              when: _libvirt_pool in _libvirt_pool_list

            - name: Undefine libvirt pool
              ansible.builtin.command: "virsh pool-undefine {{ _libvirt_pool }}"
              when: _libvirt_pool in _libvirt_pool_list
